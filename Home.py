import streamlit as st

def main():
    st.set_page_config(layout="wide", page_title="TIG Shapley Value Simulation - Explanation")
    
    st.title("TIG Shapley Value Simulation - Model Explanation")
    
    st.markdown("""
    This application simulates reward allocation using Shapley values for four key actors in the TIG ecosystem using a Cobb-Douglas production model:
    """)
    
    st.latex(r"Y = A \cdot L^{\delta} \cdot K^{\kappa}")
    
    st.markdown("### Production Function Components")
    
    # Labor component with proper LaTeX rendering
    st.markdown("#### Labor Input (L)")
    st.latex(r"L = L_B + L_{CI} + L_{AI} \cdot (1+\gamma_{AI}) + L_{CM} \cdot (1+\gamma_{CM})")
    
    # Capital component with proper LaTeX rendering
    st.markdown("#### Capital Input (K)")
    st.latex(r"K = K_B + K_{CI} + K_{AI} + K_{CM}")
    
    st.markdown("### Actor Contributions")
    st.markdown("""
    Each actor contributes both labor and capital to the production function:
    """)
    
    # Actor equations with proper LaTeX rendering
    st.markdown("#### Benchmarkers (B)")
    st.latex(r"L_B = \alpha_B^L")
    st.latex(r"K_B = \alpha_B^K")
    
    st.markdown("#### Code Innovators (CI)")
    st.latex(r"L_{CI} = \alpha_{CI}^L")
    st.latex(r"K_{CI} = \alpha_{CI}^K")
    
    st.markdown("#### Algorithm Innovators (AI)")
    st.latex(r"L_{AI} = \alpha_{AI}^L \cdot (1+\gamma_{AI})")
    st.latex(r"K_{AI} = \alpha_{AI}^K")
    
    st.markdown("#### Challenge Maintainers (CM)")
    st.latex(r"L_{CM} = \alpha_{CM}^L \cdot (1+\gamma_{CM})")
    st.latex(r"K_{CM} = \alpha_{CM}^K")
    
    st.markdown("### Shapley Value Calculation")
    st.markdown("""
    Shapley values are a solution concept in cooperative game theory that provides a fair way to distribute the total surplus 
    generated by a coalition of actors working together. The Shapley value allocates to each actor their average marginal 
    contribution across all possible coalition formations.
    
    For each actor $i$, the Shapley value is calculated as:
    """)
    
    st.latex(r"\phi_i(v) = \sum_{S \subseteq N \setminus \{i\}} \frac{|S|!(|N|-|S|-1)!}{|N|!} \cdot [v(S \cup \{i\}) - v(S)]")
    
    st.markdown("""
    Where:
    - $N$ is the set of all actors
    - $S$ is a subset of actors not containing $i$
    - $v$ is the characteristic function that assigns a value to each coalition
    - $v(S)$ is the value produced by coalition $S$
    
    In our model, the characteristic function $v$ is the Cobb-Douglas production function.
    """)
    
    st.markdown("### Hamiltonian Monte Carlo Simulation")
    st.markdown("""
    Instead of using point estimates for the parameters, this application uses Hamiltonian Monte Carlo (HMC) to sample 
    from prior distributions for each parameter. This provides a distribution of Shapley values rather than single point estimates, 
    allowing us to capture uncertainty in the parameter values.
    
    The simulation samples from the following parameters:
    - Labor contribution parameters ($\\alpha^L$)
    - Capital contribution parameters ($\\alpha^K$)
    - Bonus factors ($\\gamma$) for Algorithm Innovators and Challenge Maintainers
    - Labor elasticity ($\\delta$)
    - Capital elasticity ($\\kappa$)
    - Total factor productivity ($A$)
    
    The resulting distributions of Shapley values provide insight into the uncertainty and variability of rewards 
    allocation based on the specified prior distributions.
    """)

if __name__ == "__main__":
    main() 